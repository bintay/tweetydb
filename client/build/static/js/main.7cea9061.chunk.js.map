{"version":3,"sources":["pages/Login.js","components/Table.js","components/Question.js","util/templateToHTML.js","components/Success.js","pages/DatabaseDashboard.js","pages/Practice.js","pages/Admin.js","App.js","reportWebVitals.js","index.js"],"names":["Login","props","useState","error","setError","onLogin","e","sha256","password","setLoggedIn","className","onKeyDown","key","src","alt","onChange","value","target","setName","name","placeholder","type","setPassword","onClick","Table","rows","length","columns","Object","keys","noMaxHeight","style","title","map","column","row","index","borderLeft","correct","JSON","stringify","Question","onSubmit","answer","document","getElementById","id","innerText","setState","loading","fetch","APIPrefix","method","headers","body","query","then","res","json","result","showResults","numberIncorrect","state","parse","showNext","nextQuestion","isOnNextQuestion","setNextQuestion","render","dangerouslySetInnerHTML","__html","question","template","replace","Array","isArray","editable","getElementsByClassName","console","log","element","removeEventListener","this","pasteRawText","addEventListener","preventDefault","text","clipboardData","getData","execCommand","Component","Success","color","fontSize","width","marginTop","DatabaseDashboard","currentQuestion","setCurrentQuestion","scrollTo","offsetTop","scroll","maxAmount","difference","window","scrollY","Math","abs","unclampedAmount","amount","min","requestAnimationFrame","questions","slice","q","db_type","App","loggedIn","Admin","logs","setLogs","useEffect","io","socketIOClient","on","data","concat","background","sort","a","b","logId","newLog","path","exact","Practice","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.7cea9061.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport sha256 from 'js-sha256';\nimport './Login.css';\n\nconst Login = (props) => {\n   const [error, setError] = useState('');\n\n   const onChangeName = ({ target: { value }}) => {\n      props.setName(value);\n   }\n\n   const onChangePassword = ({ target: { value }}) => {\n      props.setPassword(value);\n   }\n\n   const onLogin = (e) => {\n      if (sha256(props.password) === '963bc8dd7a0e621416f1a1f846d5a7731e3771f7af52712080a33f984db5e617') {\n         props.setLoggedIn(true);\n      } else {\n         setError('Check your password â€” tweety didn\\'t like that one');\n      }\n   }\n\n   const onKeyDown = (e) => {\n      if (e.key === \"Enter\") {\n         onLogin();\n      }\n   }\n\n   return (\n      <div className='login' onKeyDown={onKeyDown}>\n         <img src='/tweety.png' alt='' /><br />\n         <h2>S.S. Tweety System Dashboard</h2>\n         <input onChange={onChangeName} name=\"name\" value={props.name} placeholder=\"Name\" type=\"text\" /><br />\n         <input onChange={onChangePassword} name=\"password\" value={props.password} placeholder=\"Password\" type=\"text\" /><br />\n         <p>{error}</p>\n         <button onClick={onLogin}>Access System</button>\n      </div>\n   )\n}\n\nexport default Login;\n","import React from 'react';\nimport './Table.css';\n\nconst Table = (props) => {\n   if (props.rows.length === 0) return (<div />);\n   const columns = Object.keys(props.rows[0]);\n\n   return (\n      <div className={`${props.noMaxHeight ? 'table' : 'scrollTable'}`} style={props.style}>\n         <h2>{props.title}</h2>\n         <table>\n            <tbody>\n               <tr>\n                  {columns.map(column => (<th key={column}>{column}</th>))}\n               </tr>\n               {props.rows.map((row, index) => (\n                  <tr key={index} style={{ borderLeft: row.correct ? '1px solid green' : (row.correct === false ? '1px solid red' : '') }}>\n                     {columns.map(column => (<td key={column}><div className='cell-content'>{JSON.stringify(row[column])}</div></td>))}\n                  </tr>\n               ))}\n            </tbody>\n         </table>\n      </div>\n   );\n};\n\nexport default Table;\n","import React, { Component } from 'react';\nimport templateToHTML from '../util/templateToHTML';\nimport Table from './Table';\nimport './Question.css';\n\nconst APIPrefix = process.env.NODE_ENV === 'production' ? 'https://tweetydb-api.herokuapp.com' : 'http://localhost:4000'\n\nclass Question extends Component {\n   constructor (props) {\n      super(props);\n\n      this.state = {\n         isOnNextQuestion: false,\n         error: '',\n         result: [],\n         loading: false,\n         showResults: false,\n         showNext: false,\n         numberIncorrect: 0\n      };\n   }\n\n   componentDidMount () {\n      const editable = document.getElementsByClassName('input');\n      console.log(editable);\n      for (const element of editable) {\n         element.removeEventListener(\"paste\", this.pasteRawText);\n         element.addEventListener(\"paste\", this.pasteRawText);\n      }\n   }\n\n   pasteRawText (e) {\n      e.preventDefault();\n      const text = e.clipboardData.getData('text/plain');\n      document.execCommand('insertHTML', false, text);\n   }\n\n   onSubmit = (e) => {\n      const answer = document.getElementById(`question-${this.props.id}-answer`).innerText;\n      this.setState({\n         loading: true\n      }, () => {\n         fetch(APIPrefix + '/submit', {\n            method: 'POST',\n            headers: {\n               'Content-Type': 'application/json;charset=utf-8'\n            },\n            body: JSON.stringify({\n               query: answer, \n               type: this.props.type, id: this.props.id,\n               name: this.props.name,\n               password: this.props.password\n            })\n         }).then(res => res.json()).then((res) => {\n            if (res.error) {\n               this.setState({\n                  error: `There was an error with your query! Check table and column names, and please reach out to a moderator if you're stuck!`,\n                  result: [],\n                  loading: false,\n                  showResults: true,\n                  numberIncorrect: this.state.numberIncorrect + 1\n               });\n            } else if (!res.correct) {\n               this.setState({\n                  error: `Your query ran, but the results weren't quite correct. Double check your logic, and please reach out to a moderator if you're stuck!`,\n                  result: JSON.parse(res.result),\n                  loading: false,\n                  showResults: true,\n                  numberIncorrect: this.state.numberIncorrect + 1\n               });\n            } else {\n               this.setState({\n                  error: '',\n                  result: JSON.parse(res.result),\n                  loading: false,\n                  showResults: true,\n                  showNext: true\n               });\n            }\n         });\n      });\n   }\n\n   nextQuestion = (e) => {\n      if (!this.state.isOnNextQuestion) {\n         this.props.setNextQuestion(e);\n         this.setState({\n            isOnNextQuestion: true,\n         });\n      }\n   }\n\n   render = () => (\n      <div className='question'>\n         <p dangerouslySetInnerHTML={{ __html: this.props.question }} />\n         <br />\n         <div className='queryInput'>\n            <p className='databaseType'>&gt; {this.props.type}</p>\n            <div \n               id={`question-${this.props.id}-answer`} \n               dangerouslySetInnerHTML={{ __html: templateToHTML(this.props.template, this.props.id) }} \n            />\n         </div>\n         <p className='error'>{ this.state.error }</p>\n         {\n            this.state.result && Array.isArray(this.state.result) && this.state.result.length > 0\n            ? <Table rows={this.state.result} title='Query Results' />\n            : this.state.showResults \n            ? <p>no results to display</p>\n            : this.state.loading\n            ? <p>loading...</p>\n            : <br />\n         }\n         {\n            this.state.showNext\n            ? <button onClick={this.nextQuestion} className='yellow'>Next</button>\n            : <button onClick={this.onSubmit}>Submit</button>\n         }\n         {\n            this.state.numberIncorrect > 3 && !this.state.showNext\n            ? <button onClick={this.nextQuestion} className='red'>Skip</button>\n            : null\n         }\n      </div>\n   )\n}\n\nexport default Question;\n","export default function templateToHTML (template) {\n   return template.replace(/___/g, `<span contenteditable=\"true\" class=\"input\" role=\"textbox\"></span>`);\n}\n","import React from 'react';\n\nconst Success = () => (\n   <div>\n      <h2 style={{ color: 'rgb(255,255,77)', fontSize: 40 }}>All systems operational!</h2>\n      <img src='/tweety.png' alt='Tweety the spaceship' style={{ width: 400, marginTop: -100 }} className='animateBounce' />\n   </div>\n);\n\nexport default Success;\n","import React, { useState } from 'react';\nimport Question from '../components/Question';\nimport Success from '../components/Success';\nimport questions from '../content/questions.json';\nimport './DatabaseDashboard.css';\n\nconst DatabaseDashboard = (props) => {\n   const [ currentQuestion, setCurrentQuestion ] = useState(0);\n   \n   const setNextQuestion = (e) => {\n      setCurrentQuestion(currentQuestion + 1);\n      scrollTo(e.target.offsetTop, 2);\n   }\n\n   const scrollTo = (scroll, maxAmount) => {\n      const difference = scroll - window.scrollY;\n      if (Math.abs(difference) > 5) {\n         const unclampedAmount = difference / 2;\n         const amount = Math.min(unclampedAmount, maxAmount);\n         window.scrollTo(0, window.scrollY + amount);\n         requestAnimationFrame(() => scrollTo(scroll, maxAmount * 1.1));\n      }\n   }\n\n   return (\n      <div>\n         {\n            questions.slice(0, currentQuestion + 1).map(q => \n               <Question \n                  key={q.id}\n                  template={q.template} \n                  question={q.question} \n                  id={q.id} \n                  type={q.db_type} \n                  name={props.name}\n                  password={props.password}\n                  setNextQuestion={setNextQuestion}\n               />\n            )\n         }\n         {\n            currentQuestion >= questions.length\n            ? <Success />\n            : null\n         }\n      </div>\n   )\n}\n\nexport default DatabaseDashboard;\n","import React, { useState } from 'react';\nimport Login from './Login';\nimport DatabaseDashboard from './DatabaseDashboard.js';\n\nconst App = () => {\n   const [ name, setName ] = useState('');\n   const [ password, setPassword ] = useState('');\n   const [ loggedIn, setLoggedIn ] = useState(false);\n\n   return (\n      <div className='App'>\n         {\n            loggedIn\n            ? <DatabaseDashboard password={password} name={name} />\n            : <Login password={password} name={name} setPassword={setPassword} setName={setName} setLoggedIn={setLoggedIn} />\n         }\n      </div>\n   );\n}\n\nexport default App;\n","import React, { useState, useEffect } from 'react';\nimport socketIOClient from \"socket.io-client\";\nimport Table from '../components/Table';\n\nconst APIPrefix = process.env.NODE_ENV === 'production' ? 'https://tweetydb-api.herokuapp.com' : 'http://localhost:4000'\n\nconst Admin = () => {\n   const [ logs, setLogs ] = useState([]);\n   const mapLogs = (log, index) => {\n      const newLog = {\n         'Name': log.name,\n         'Question Number': log.id,\n         'Query': log.query,\n         ...log\n      };\n      delete newLog.id;\n      delete newLog.name;\n      delete newLog.query;\n      return newLog;\n   }\n\n   useEffect(() => {\n      console.log('mounted');\n      const io = socketIOClient(APIPrefix);\n\n      io.on('full_logs', (data) => {\n         console.log('full_logs', data)\n         setLogs(data);\n      });\n\n      io.on('new_log', (data) => {\n         console.log('new_log', data);\n         console.log('old_logs', logs);\n         setLogs(logs => logs.concat([data]));\n      });\n   // eslint-disable-next-line react-hooks/exhaustive-deps\n   }, []);\n\n   return (\n      <div>\n         <Table style={{ background: '#000' }} noMaxHeight title='Recent Submissions' rows={logs.sort((a, b) => b.logId - a.logId).map(mapLogs)} />\n      </div>\n   )\n};\n\nexport default Admin;\n","import React from 'react';\nimport Practice from './pages/Practice';\nimport Admin from './pages/Admin';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport './App.css';\n\nconst App = () => {\n  return (\n    <Router>\n      <Route path=\"/\" exact><Practice /></Route>\n      <Route path=\"/admin\"><Admin /></Route>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}